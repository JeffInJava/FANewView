<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"	
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	 <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations" value="classpath:config.properties"/>
    </bean>
    
	<bean id="dataSourceTarget" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="driverClassName" value="${db.driver}"/>
  	 	<property name="url" value="${db.url}" />  
	    <property name="username" value="${db.user}" />  
	    <property name="password" value="${db.pass}" />
	      
	      
  	 	<property name="filters" value="stat" />  
   
	    <property name="maxActive" value="10" />  
	    <property name="initialSize" value="5" />  
	    <property name="maxWait" value="60000" />  
	    <property name="minIdle" value="1" />  
	   
	    <property name="timeBetweenEvictionRunsMillis" value="60000" />  
	    <property name="minEvictableIdleTimeMillis" value="300000" />  
	   
	   <!--  <property name="validationQuery" value="SELECT 'x'" />   -->
	    <property name="testWhileIdle" value="true" />  
	    <property name="testOnBorrow" value="false" />  
	    <property name="testOnReturn" value="false" />  
	       
	    <property name="poolPreparedStatements" value="true" />  
	    <property name="maxPoolPreparedStatementPerConnectionSize" value="80" />  
  	 	
  	 	
    </bean>	
	
	<!-- 将hibernate的session交给spring管理,结合下面的aop事务,所以可以设置为自动提交 -->
    <bean id="mySessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean"  >
    	<property name="dataSource" ref="dataSourceTarget"/> 
    	
    	<property name="hibernateProperties">
			<props>
<!--				<prop key="hibernate.dialect">jsontag.module.hibernate.dialect.JtMySQL5Dialect</prop>-->
				<prop key="hibernate.dialect">org.hibernate.dialect.OracleDialect</prop>
				<prop key="hibernate.connection.isolation">1</prop>
				<prop key="hibernate.connection.autocommit">true</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.user_sql_comments">false</prop>
				<prop key="hibernate.jdbc.use_streams_for_binary">true</prop>
				<prop key="hibernate.jdbc.batch_size">50</prop>
				<prop key="hibernate.query.substitutions">true 1, false 0</prop>
				<prop key="hibernate.jdbc.fetch_size">10</prop>
				<prop key="hibernate.max_fetch_depth">3</prop>
<!--				<prop key="hibernate.hbm2ddl.auto">update</prop> -->
			</props>
		</property>
		<property name="packagesToScan" >
			<list>
<!--				<value>jkuser.po</value>-->
<!--				<value>jkworkflow.po</value>-->
				<value>jsontag.po</value>
<!--				<value>com.gmoa.po</value>-->
			</list>
		</property>
	</bean>
	
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
        <property name="sessionFactory" ref="mySessionFactory"></property>
    </bean>
	
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSourceTarget"></property>
    </bean>
	
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager"  >
		<property name="sessionFactory" ref="mySessionFactory"></property>
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager"/>
  	
</beans>